<div class="mainCont">
  <div class="sidePanel">
    <button class="sidePanelBtn" id="fontP">font+</button>
    <button class="sidePanelBtn" id="color">kolory</button>
    <button class="sidePanelBtn" id="fontM">font-</button>
    <button class="sidePanelBtn" id="save">zapisz ustawienia</button>
    <button class="sidePanelBtn" id="changeName">zmiana nazwy</button>

   

  </div>
  <div class="centerPanel">

    <div id="label">{{name}}</div>
 <textarea id='lineCounter' wrap='off'  readonly>1.</textarea>
  <textarea id='codeEditor' wrap='off' >{{content}}</textarea>   
 
    </div>
  </div>
</div>
<dialog id="changeNameDialog">
  <p>Nazwa Pliku</p>
  <form action="/changeFileName" method="get">
    <input type="text" name="name" />
    <button type="submit">Dodaj</button>
  </form>

</dialog>

<script>
  document.getElementById('changeName').addEventListener('click', (e) => {
  document.getElementById('changeNameDialog').showModal() })
const classes={'color-blue':['color-blue-editor','color-blue-line'],'color-violet':['color-violet-editor','color-violet-line'],'color-grey':['color-grey-editor','color-grey-line'],'color-contrast':['color-contrast-editor','color-contrast-line']}
let editorClass,lineClass,fontSize,theme;
const codeEditor = document.getElementById('codeEditor');
const lineCounter = document.getElementById('lineCounter');
const btnFontP=document.getElementById('fontP')
const btnFontM=document.getElementById('fontM')
const btnColor=document.getElementById('color')
const btnSave=document.getElementById('save')
codeEditor.addEventListener('keydown', (e) => {
       let { keyCode } = e;
       let { value, selectionStart, selectionEnd } = codeEditor;
if (keyCode === 9) {  
         e.preventDefault();
         codeEditor.value = value.slice(0, selectionStart) + '\t' + value.slice(selectionEnd);
         codeEditor.setSelectionRange(selectionStart+2, selectionStart+2)
       }
 });
 let lineCountCache = 0;
 
function line_counter() {
      let lineCount = codeEditor.value.split('\n').length;
      let outarr = new Array();
      if (lineCountCache != lineCount) {
         for (let x = 0; x < lineCount; x++) {
            outarr[x] = (x + 1) + '.';
         }
         lineCounter.value = outarr.join('\n');
      }
      lineCountCache = lineCount;
}
codeEditor.addEventListener('input', () => {
    line_counter();
});
async function getConfig() {
  let res = await fetch('/getConfig');
   const config=await res.json()
   return config
}
getConfig().then(data=>{
  const index=classes[data.theme]
  theme=data.theme
  {{!-- editorClass=index[0]
  lineClass=index[1] --}}
  fontSize=data['font-size']
  rednerCnf();
  })

function rednerCnf(){
  codeEditor.classList=[]
  codeEditor.classList.add(classes[theme][0])
  lineCounter.classList=[]
  lineCounter.classList.add(classes[theme][1])
  codeEditor.style.fontSize=`${fontSize}px`
  lineCounter.style.fontSize=`${fontSize}px`
}
btnFontP.addEventListener('click',()=>{
  fontSize+=1
  rednerCnf()
})
btnFontM.addEventListener('click',()=>{
  fontSize-=1
  rednerCnf()
})
color.addEventListener('click',()=>{
  let keys = Object.keys(classes);
 let nextIndex = keys.indexOf(theme) +1;
 let nextItem = keys[nextIndex];

  if(nextItem==undefined)
  theme=keys[0]
  else  
  theme=nextItem
  rednerCnf()
})
btnSave.addEventListener('click',()=>{
  const exitData={
    'font-size':fontSize,
    theme:theme,
  }
  console.log(exitData)
  fetch('/saveConfig',{
	method: 'POST',
	body: JSON.stringify(exitData), 
	headers: {
		'Content-type': 'application/json'	}})
})
</script>